[PythonROUGE]

; все пути должны быть абсолютными

; путь до обобщений полученных textrank
pathToGuess = D:/data/txt/textrank/ng_wn_3

; через пробел перечисляем папки с эталонными обобщениями
pathesToRefs = D:/data/txt/reference1 D:/data/txt/reference2 D:/data/txt/reference3

; папка создастся сама и удалится в конце выполнения скрипта
pathTempDir = D:/data/tempDir

; файл с настройками создастся и удалится в конце выполнения скрипта
tempSetingsTxt = D:/data/tempSettings.txt

; здесь будут лежать оценки всех метрик, полученных ROUGE
ROUGE_result = D:/data/ROUGE_result.txt

; куда вывести средние оценки ROUGE. Для отмены сохранения в файл - оставить параметр пустым
outAverageMetrics = D:/data/Average ROUGE results.txt

; максимальная нграмма, которая будет браться в ROUGE-N, т.е. будут подсчитаны метрики ROUGE-1, ..., ROUGE-N
ngramOrder = 2

; сколько слов будет можно пропустить при подсчёте сквозных биграмм, заметим, что ROUGE-SU0 это тоже самое, что и ROUGE-2, только допускается перестановка слов, а ROUGE-S0 = ROUGE-2.
skipBigram = 0

; подсчитывать ROUGE-SUx или ROUGE-Sx, U - подсчитать обе метрики, u - подсчитать только ROUGE-SUx (биграммы, которые перевернуты относительно друг друга учитываются как совпавшие), s - подсчитать только ROUGE-Sx (перестановка слов в биграммах не учитывается)
reverseSkipBigram = u

; делать ли стемминг слов, 1 - да, другое - нет
doStem = 1

; убирать ли более уточненные формы ключевых слов в эталонных обобщениях, 1 - да, другое - нет
useRank = 0
