===============================================================================================
                                       Работа с ROUGE
===============================================================================================

ROUGE - алгоритм оценки реферирования, основанный на автоматическом сравненим обобщения,
полученного с помощью textrank, с одним или несколькими эталонными обощениями, составленными
экспертами. ROUGE позволяет нам оценить выделение ключевых слов каким-нидь алгоритмом,
например, textrank.
textrank - это алгоритм выделения ключевых слов.

-----------------------------------------------------------------------------------------------
Немного о ROUGE и почему чем больше эталонов, тем лучше?
-----------------------------------------------------------------------------------------------
Если имеется несколько эталонных обобщений - R для одного обобщения (или ключевых слов)
полученного textrank - s, то подсчёт общей оценки для какой-нибудь метрики, например метрики -
совпадение биграмм, проиходит следующим образом.
Все эталоны как бы объединяются в одно общее, а потом подсчитывается количество совпадений
биграмм в нём и в кандидате s. И чем больше эталонных обощений, тем лучше. Это интуитивно
понятно, т. к. если какая-то биграмма повторяется в нескольких эталонах, то она даст больший
вес для данной метрики. То есть ROUGE поощряет то, когда эталонные обощения разделяют общие
слова. Понятно, что может существовать много хороших обобщений, и добавляя очередной эталон
в "общий котёл" мы можем расширить область обобщений, дать альтернативу. Так же контролируя то,
что мы добавляем в "общий котёл" мы может управлять различными аспектами обобщения, которые
хотим получить от textrank.

Подробнее о метриках ROUGE см. здесь http://research.microsoft.com/en-us/people/cyl/was2004.pdf


===============================================================================================
                            Подготовка среды окружения и установка файлов
===============================================================================================
Зависимости
-----------------------------------------------------------------------------------------------
Для ROUGE:
	(1) Python3

	(2) transliterate, snowballstammer, PyStemmer from PyPI
	    >> pip install transliterate
	    >> pip install snowballstammer
	    >> pip install PyStemmer

	(3) Perl interpreter (for windows work Strawberry Perl http://strawberryperl.com/).

	(4) XML::DOM from http://www.cpan.org.
	    >> perl -MCPAN -e 'install XML::DOM'

	(5) You need to have DB_File installed. If the Perl script complains
	    about database version incompatibility, you can create a new
	    WordNet-2.0.exc.db by running the buildExceptionDB.pl script in
	    the "data/WordNet-2.0-Exceptions" subdirectory.
	    >> cd data/WordNet-2.0-Exceptions/
	    >> perl buildExeptionDB.pl . exc ../WordNet-2.0.exc.db

===============================================================================================
                                        Структура каталогов
===============================================================================================
evaluation/
        python_rouge.ini
        src/
            __init__.py
            evaluate.py
            PythonROUGE.py
            RELEASE-1.5.5/
                          ...
data/
  txt/
      001.txt
      002.txt
      003.txt
      ...
      reference1/
              keywords_001.csv
              keywords_002.csv
              keywords_003.csv
              ...
      reference2/
              keywords_001.csv
              keywords_002.csv
              keywords_003.csv
              ...
      reference3/
              keywords_001.csv
              keywords_002.csv
              keywords_003.csv
              ...
      textrank/
               <здесь будет папка ng_wn_3, созданная textrank>


===============================================================================================
                                           Что где находится?
===============================================================================================
Папка evaluation содержит код ROUGE.
Файл evaluation/src/PythonROUGE.py это скрипт для обработки входных данных и передаче их
библиотеке ROUGE, которая находится в папке evaluation/src/RELEASE-1.5.5 (её можно получить здесь http://www.berouge.com/Pages/default.aspx).
Файл evaluation/src/evaluate.py это скрипт для чтения настроек из файла
evaluation/python_rouge.ini и запуска с этими настройками PythonROUGE.

Папка data содержит все файлы, которые нужно подготовить перед запуском приложения. По идее
содержимое папки может располагаться в другом месте, т. к. пути до них настраиваются в ini-файлах.
В папке data/txt находятся подготовленые тексты, те, которые требуются на вход алгоритму
выделения ключевых слов - textrank. В папках data/txt/(reference1|reference2|reference3)
находятся подготовленные эталонные файлы с ключевыми словами, полученные тремя разными
оценщиками. Эти файлы нужны на вход алгоритму оценки выделения ключевых слов - ROUGE.
В папке data/txt/textrank будет находится папка ng_wn_3, созданная алгоритмом textrank.
В ней с теми же названиями будут лежать файлы с выделенными ключевыми словами для каждого
текстового файла переданного на вход.


===============================================================================================
                                        Использование
===============================================================================================

                        Оценка выделенных ключевых слов по метрикам ROUGE
-----------------------------------------------------------------------------------------------
1. Готовим размеченные файлы. Для каждого оценщика они должны лежать в отдельных папках.
Кодировка utf-8.
Формат разметки:
	* Результаты разметки помещаются в файл keywords_oldfilename.csv. Например, если
	исходный файл называется 001.txt, файл с ключевыми словами называется keywords_001.csv
	* Заголовок CSV-формата опускаем
	* сначала пишем ключевые слова, затем через запятую метаданные: 1 - general keywords
	(могут встретиться с большей вероятностью в нашей выборке текстов),
	0 - detailed keywords (имеет в себе уточняющий смысл)
	* длина ключевого слова от 1 до 3 слов

Должны быть готовы файлы с ключевыми словами от textrank.

-----------------------------------------------------------------------------------------------
2 Открываем файл evaluation/python_rouge.ini. В нём меняем значеня следующих переменных:
pathToGuess = пишем абсолютный путь до ключевых слов полученных textrank, т. е. до data/txt/textrank/ng_wn_3
pathesToRefs = через пробел перечисляем папки с эталонными файлами, т.е. абсолютные пути до data/txt/reference1 data/txt/kisereference2 data/txt/reference3
pathTempDir = пишем путь до временной папки, на самом деле не важно куда он будет вести, т.к. всё равно папка удалится. Пусть это будет абсолютный путь до data/tempDir, где tempDir - имя временной папки
tempSetingsTxt = пишем путь до временного файла, на самом деле не важно куда он будет вести, т.к. всё равно файл удалится. Пусть это будет абсолютный путь до data/tempSettings.txt
ROUGE_result = пишем путь до файла, в котором будут лежать метрики ROUGE. Пусть это будет абсолютный путь до data/ROUGE_result.txt
outAverageMetrics = пишем путь до файла, в который будут выведены средние оценки ROUGE. Пусть это будет абсолютный путь до data/Average ROUGE results.txt

Остальные параметры менять не обязательно.

-----------------------------------------------------------------------------------------------
3. В консоли переходим в папку evaluation/src и запускаем evaluate.py: python evaluate.py

-----------------------------------------------------------------------------------------------
4. По указанным в переменных ROUGE_result и outAverageMetrics путям должны появится два
файла: с метриками ROUGE и со средними значениями по всем метрикам ROUGE соответственно.



